# Cross-Repository Project Integration - Community to Main
name: "ü§ù Sync to Main Project Board"

on:
  issues:
    types: [opened, labeled, closed, reopened]
  issue_comment:
    types: [created]

env:
  MAIN_PROJECT_NUMBER: 5
  MAIN_PROJECT_OWNER: luckyjaya

jobs:
  sync-to-main-project:
    name: üìä Sync to Main Project Board
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'

    steps:
      - name: Add community issue to main project board
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MAIN_PROJECT_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const action = context.payload.action || 'opened';
            
            // Add prefix untuk community issues
            const communityLabel = 'üåê community';
            
            try {
              // 1. Add community label jika belum ada
              const hasLabel = issue.labels.some(label => label.name === communityLabel);
              if (!hasLabel && action === 'opened') {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  labels: [communityLabel]
                });
              }
              
              // 2. Get main project ID
              const projectQuery = `
                query($login: String!, $number: Int!) {
                  organization(login: $login) {
                    projectV2(number: $number) {
                      id
                      title
                    }
                  }
                }
              `;

              const projectResult = await github.graphql(projectQuery, {
                login: process.env.MAIN_PROJECT_OWNER,
                number: parseInt(process.env.MAIN_PROJECT_NUMBER)
              });

              const projectId = projectResult.organization.projectV2.id;
              
              // 3. Add issue to main project board (hanya untuk issue baru)
              if (action === 'opened') {
                const addItemMutation = `
                  mutation($projectId: ID!, $contentId: ID!) {
                    addProjectV2ItemById(input: {
                      projectId: $projectId
                      contentId: $contentId
                    }) {
                      item {
                        id
                      }
                    }
                  }
                `;

                await github.graphql(addItemMutation, {
                  projectId: projectId,
                  contentId: issue.node_id
                });
              }
              
              return {
                success: true,
                action: action,
                issue_number: issue.number,
                repository: context.repo.owner + '/' + context.repo.repo,
                project_id: projectId
              };
              
            } catch (error) {
              // Don't fail the workflow, just log the error
              return {
                success: false,
                error: error.message,
                issue_number: issue.number
              };
            }

  notify-main-repo:
    name: üì® Notify Main Repository
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    needs: sync-to-main-project

    steps:
      - name: Create tracking issue in main repo
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MAIN_PROJECT_TOKEN }}
          script: |
            const communityIssue = context.payload.issue;
            
            // Create tracking issue di main repo
            const trackingIssueBody = `
            # üåê Community Issue Tracking
            
            **Original Issue:** ${communityIssue.html_url}
            **Reporter:** @${communityIssue.user.login}
            **Repository:** ${context.repo.owner}/${context.repo.repo}
            
            ## Original Title
            ${communityIssue.title}
            
            ## Original Description
            ${communityIssue.body || 'No description provided'}
            
            ---
            *This is an automated tracking issue for community feedback. Original discussion should happen in the linked community issue.*
            `;
            
            try {
              const trackingIssue = await github.rest.issues.create({
                owner: process.env.MAIN_PROJECT_OWNER,
                repo: 'luckyjayagroup',
                title: `[COMMUNITY] ${communityIssue.title}`,
                body: trackingIssueBody,
                labels: ['community-feedback', 'needs-triage']
              });
              
              // Comment di community issue dengan link ke tracking
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: communityIssue.number,
                body: `‚úÖ Issue ini telah di-track di main project board: ${trackingIssue.data.html_url}`
              });
              
              return {
                success: true,
                tracking_issue: trackingIssue.data.html_url
              };
              
            } catch (error) {
              return {
                success: false,
                error: error.message
              };
            }
